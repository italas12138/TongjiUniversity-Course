int INT
a ID
; SEMICO
nextLine NEXTLINE
int INT
b ID
; SEMICO
nextLine NEXTLINE
int INT
program ID
( LPAREN
int INT
a ID
, COMMA
int INT
b ID
, COMMA
int INT
c ID
) RPAREN
nextLine NEXTLINE
{ LBRACE
nextLine NEXTLINE
int INT
i ID
; SEMICO
nextLine NEXTLINE
int INT
j ID
; SEMICO
nextLine NEXTLINE
i ID
= ASSIGN
0 NUM
; SEMICO
nextLine NEXTLINE
if IF
( LPAREN
a ID
> GT
( LPAREN
b ID
+ ADD
c ID
) RPAREN
) RPAREN
nextLine NEXTLINE
{ LBRACE
nextLine NEXTLINE
j ID
= ASSIGN
a ID
+ ADD
( LPAREN
b ID
* MULT
c ID
+ ADD
1 NUM
) RPAREN
; SEMICO
nextLine NEXTLINE
} RBRACE
nextLine NEXTLINE
else ELSE
nextLine NEXTLINE
{ LBRACE
nextLine NEXTLINE
j ID
= ASSIGN
a ID
; SEMICO
nextLine NEXTLINE
} RBRACE
nextLine NEXTLINE
while WHILE
( LPAREN
i ID
<= LTE
100 NUM
) RPAREN
nextLine NEXTLINE
{ LBRACE
nextLine NEXTLINE
i ID
= ASSIGN
j ID
* MULT
2 NUM
; SEMICO
nextLine NEXTLINE
j ID
= ASSIGN
i ID
; SEMICO
nextLine NEXTLINE
} RBRACE
nextLine NEXTLINE
return RETURN
i ID
; SEMICO
nextLine NEXTLINE
} RBRACE
nextLine NEXTLINE
nextLine NEXTLINE
int INT
demo ID
( LPAREN
int INT
a ID
) RPAREN
nextLine NEXTLINE
{ LBRACE
nextLine NEXTLINE
a ID
= ASSIGN
a ID
+ ADD
2 NUM
; SEMICO
nextLine NEXTLINE
return RETURN
a ID
* MULT
2 NUM
; SEMICO
nextLine NEXTLINE
} RBRACE
nextLine NEXTLINE
nextLine NEXTLINE
void VOID
main ID
( LPAREN
void VOID
) RPAREN
nextLine NEXTLINE
{ LBRACE
nextLine NEXTLINE
int INT
a ID
; SEMICO
nextLine NEXTLINE
int INT
b ID
; SEMICO
nextLine NEXTLINE
int INT
c ID
; SEMICO
nextLine NEXTLINE
a ID
= ASSIGN
3 NUM
; SEMICO
nextLine NEXTLINE
b ID
= ASSIGN
4 NUM
; SEMICO
nextLine NEXTLINE
c ID
= ASSIGN
2 NUM
; SEMICO
nextLine NEXTLINE
a ID
= ASSIGN
program ID
( LPAREN
a ID
, COMMA
b ID
, COMMA
demo ID
( LPAREN
c ID
) RPAREN
) RPAREN
; SEMICO
nextLine NEXTLINE
return RETURN
; SEMICO
nextLine NEXTLINE
} RBRACE
nextLine NEXTLINE
$ ENDFILE
