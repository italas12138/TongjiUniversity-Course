int INT
max ID
( LPAREN
int INT
x ID
, COMMA
int INT
y ID
) RPAREN
{ LBRACE
nextLine NEXTLINE
if IF
( LPAREN
x ID
> GT
y ID
) RPAREN
{ LBRACE
nextLine NEXTLINE
return RETURN
x ID
; SEMICO
nextLine NEXTLINE
} RBRACE
nextLine NEXTLINE
else ELSE
{ LBRACE
nextLine NEXTLINE
return RETURN
y ID
; SEMICO
nextLine NEXTLINE
} RBRACE
nextLine NEXTLINE
} RBRACE
nextLine NEXTLINE
int INT
min ID
( LPAREN
int INT
x ID
, COMMA
int INT
y ID
) RPAREN
{ LBRACE
nextLine NEXTLINE
if IF
( LPAREN
x ID
< LT
y ID
) RPAREN
{ LBRACE
nextLine NEXTLINE
int INT
t ID
; SEMICO
nextLine NEXTLINE
t ID
= ASSIGN
x ID
; SEMICO
nextLine NEXTLINE
x ID
= ASSIGN
y ID
; SEMICO
nextLine NEXTLINE
y ID
= ASSIGN
t ID
; SEMICO
nextLine NEXTLINE
} RBRACE
nextLine NEXTLINE
return RETURN
y ID
; SEMICO
nextLine NEXTLINE
} RBRACE
nextLine NEXTLINE
int INT
sum ID
( LPAREN
int INT
x ID
, COMMA
int INT
y ID
) RPAREN
{ LBRACE
nextLine NEXTLINE
return RETURN
x ID
+ ADD
y ID
; SEMICO
nextLine NEXTLINE
} RBRACE
nextLine NEXTLINE
int INT
main ID
( LPAREN
) RPAREN
nextLine NEXTLINE
{ LBRACE
nextLine NEXTLINE
int INT
a ID
; SEMICO
nextLine NEXTLINE
int INT
b ID
; SEMICO
nextLine NEXTLINE
int INT
c ID
; SEMICO
nextLine NEXTLINE
int INT
d ID
; SEMICO
nextLine NEXTLINE
int INT
f ID
; SEMICO
nextLine NEXTLINE
a ID
= ASSIGN
3 NUM
; SEMICO
nextLine NEXTLINE
b ID
= ASSIGN
4 NUM
; SEMICO
nextLine NEXTLINE
c ID
= ASSIGN
max ID
( LPAREN
a ID
, COMMA
b ID
) RPAREN
; SEMICO
nextLine NEXTLINE
f ID
= ASSIGN
min ID
( LPAREN
a ID
, COMMA
c ID
, COMMA
d ID
) RPAREN
; SEMICO
nextLine NEXTLINE
return RETURN
0 NUM
; SEMICO
nextLine NEXTLINE
} RBRACE
nextLine NEXTLINE
$ ENDFILE
