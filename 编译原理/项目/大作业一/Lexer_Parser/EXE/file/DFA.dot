digraph{
rankdir=LR;
node_0[label="S0->.program, the_end
program->.dec_list, the_end
dec_list->.dec, the_end
dec_list->.decdec_list, the_end
dec->.intiddec_type, the_end/int/void
dec->.voididfunc_dec, the_end/int/void
" shape="box"];
node_1[label="dec->int.iddec_type, the_end/int/void
" shape="box"];
node_2[label="dec->void.idfunc_dec, the_end/int/void
" shape="box"];
node_3[label="S0->program., the_end
" shape="box"];
node_4[label="program->dec_list., the_end
" shape="box"];
node_5[label="dec_list->.dec, the_end
dec_list->dec., the_end
dec_list->.decdec_list, the_end
dec_list->dec.dec_list, the_end
dec->.intiddec_type, the_end/int/void
dec->.voididfunc_dec, the_end/int/void
" shape="box"];
node_6[label="dec->intid.dec_type, the_end/int/void
dec_type->.var_dec, the_end/int/void
dec_type->.func_dec, the_end/int/void
var_dec->.;, the_end/int/void
func_dec->.(params)stat_block, the_end/int/void
" shape="box"];
node_7[label="dec->voidid.func_dec, the_end/int/void
func_dec->.(params)stat_block, the_end/int/void
" shape="box"];
node_8[label="dec_list->decdec_list., the_end
" shape="box"];
node_9[label="var_dec->;., the_end/int/void
" shape="box"];
node_10[label="func_dec->(.params)stat_block, the_end/int/void
params->.param_list, )
params->.void, )
param_list->.parampre_param, )
param->.intid, ,/)
" shape="box"];
node_11[label="dec->intiddec_type., the_end/int/void
" shape="box"];
node_12[label="dec_type->func_dec., the_end/int/void
" shape="box"];
node_13[label="dec_type->var_dec., the_end/int/void
" shape="box"];
node_14[label="dec->voididfunc_dec., the_end/int/void
" shape="box"];
node_15[label="param->int.id, ,/)
" shape="box"];
node_16[label="params->void., )
" shape="box"];
node_17[label="func_dec->(params.)stat_block, the_end/int/void
" shape="box"];
node_18[label="params->param_list., )
" shape="box"];
node_19[label="param_list->param.pre_param, )
pre_param->., )
pre_param->.,parampre_param, )
" shape="box"];
node_20[label="param->intid., ,/)
" shape="box"];
node_21[label="func_dec->(params).stat_block, the_end/int/void
stat_block->.{in_decstat_str}, the_end/int/void
" shape="box"];
node_22[label="pre_param->,.parampre_param, )
param->.intid, ,/)
" shape="box"];
node_23[label="param_list->parampre_param., )
" shape="box"];
node_24[label="stat_block->{.in_decstat_str}, the_end/int/void
in_dec->., id/if/while/return
in_dec->.in_var_dec;in_dec, id/if/while/return
in_var_dec->.intid, ;
" shape="box"];
node_25[label="func_dec->(params)stat_block., the_end/int/void
" shape="box"];
node_26[label="pre_param->., )
pre_param->.,parampre_param, )
pre_param->,param.pre_param, )
" shape="box"];
node_27[label="in_var_dec->int.id, ;
" shape="box"];
node_28[label="stat_block->{in_dec.stat_str}, the_end/int/void
stat_str->.stat, }
stat_str->.statstat_str, }
stat->.if_stat, id/}/if/while/return
stat->.while_stat, id/}/if/while/return
stat->.return_stat, id/}/if/while/return
stat->.assign_stat, id/}/if/while/return
stat->.idfunc_type;, id/}/if/while/return
assign_stat->.id=expr;, id/}/if/while/return
return_stat->.return;, id/}/if/while/return
return_stat->.returnexpr;, id/}/if/while/return
while_stat->.while(expr)stat_block, id/}/if/while/return
if_stat->.if(expr)stat_block, id/}/if/while/return
if_stat->.if(expr)stat_blockelsestat_block, id/}/if/while/return
" shape="box"];
node_29[label="in_dec->in_var_dec.;in_dec, id/if/while/return
" shape="box"];
node_30[label="pre_param->,parampre_param., )
" shape="box"];
node_31[label="in_var_dec->intid., ;
" shape="box"];
node_32[label="stat->id.func_type;, id/}/if/while/return
assign_stat->id.=expr;, id/}/if/while/return
func_type->., ;
func_type->.call, ;
call->.(argus), ;
" shape="box"];
node_33[label="if_stat->if.(expr)stat_block, id/}/if/while/return
if_stat->if.(expr)stat_blockelsestat_block, id/}/if/while/return
" shape="box"];
node_34[label="while_stat->while.(expr)stat_block, id/}/if/while/return
" shape="box"];
node_35[label="return_stat->return.;, id/}/if/while/return
return_stat->return.expr;, id/}/if/while/return
expr->.add_exprcomp_add_expr, ;
add_expr->.termpre_term, ==/>/>=/</<=/!=/;
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/;
factor->.num, +/-/*///==/>/>=/</<=/!=/;
factor->.(expr), +/-/*///==/>/>=/</<=/!=/;
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_36[label="stat_block->{in_decstat_str.}, the_end/int/void
" shape="box"];
node_37[label="stat_str->.stat, }
stat_str->stat., }
stat_str->.statstat_str, }
stat_str->stat.stat_str, }
stat->.if_stat, id/}/if/while/return
stat->.while_stat, id/}/if/while/return
stat->.return_stat, id/}/if/while/return
stat->.assign_stat, id/}/if/while/return
stat->.idfunc_type;, id/}/if/while/return
assign_stat->.id=expr;, id/}/if/while/return
return_stat->.return;, id/}/if/while/return
return_stat->.returnexpr;, id/}/if/while/return
while_stat->.while(expr)stat_block, id/}/if/while/return
if_stat->.if(expr)stat_block, id/}/if/while/return
if_stat->.if(expr)stat_blockelsestat_block, id/}/if/while/return
" shape="box"];
node_38[label="stat->if_stat., id/}/if/while/return
" shape="box"];
node_39[label="stat->while_stat., id/}/if/while/return
" shape="box"];
node_40[label="stat->return_stat., id/}/if/while/return
" shape="box"];
node_41[label="stat->assign_stat., id/}/if/while/return
" shape="box"];
node_42[label="in_dec->., id/if/while/return
in_dec->.in_var_dec;in_dec, id/if/while/return
in_dec->in_var_dec;.in_dec, id/if/while/return
in_var_dec->.intid, ;
" shape="box"];
node_43[label="assign_stat->id=.expr;, id/}/if/while/return
expr->.add_exprcomp_add_expr, ;
add_expr->.termpre_term, ==/>/>=/</<=/!=/;
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/;
factor->.num, +/-/*///==/>/>=/</<=/!=/;
factor->.(expr), +/-/*///==/>/>=/</<=/!=/;
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_44[label="expr->.add_exprcomp_add_expr, ,/)
add_expr->.termpre_term, ==/>/>=/</<=/!=/,/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
factor->.num, +/-/*///==/>/>=/</<=/!=/,/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/,/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/,/)
call->(.argus), ;
argus->., )
argus->.argu_list, )
argu_list->.exprpre_expr, )
" shape="box"];
node_45[label="stat->idfunc_type.;, id/}/if/while/return
" shape="box"];
node_46[label="func_type->call., ;
" shape="box"];
node_47[label="if_stat->if(.expr)stat_block, id/}/if/while/return
if_stat->if(.expr)stat_blockelsestat_block, id/}/if/while/return
expr->.add_exprcomp_add_expr, )
add_expr->.termpre_term, ==/>/>=/</<=/!=/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/)
factor->.num, +/-/*///==/>/>=/</<=/!=/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_48[label="while_stat->while(.expr)stat_block, id/}/if/while/return
expr->.add_exprcomp_add_expr, )
add_expr->.termpre_term, ==/>/>=/</<=/!=/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/)
factor->.num, +/-/*///==/>/>=/</<=/!=/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_49[label="factor->id.func_type, +/-/*///==/>/>=/</<=/!=/;
func_type->., +/-/*///==/>/>=/</<=/!=/;
func_type->.call, +/-/*///==/>/>=/</<=/!=/;
call->.(argus), +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_50[label="factor->num., +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_51[label="return_stat->return;., id/}/if/while/return
" shape="box"];
node_52[label="expr->.add_exprcomp_add_expr, )
add_expr->.termpre_term, ==/>/>=/</<=/!=/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/)
factor->.num, +/-/*///==/>/>=/</<=/!=/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/)
factor->(.expr), +/-/*///==/>/>=/</<=/!=/;
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_53[label="return_stat->returnexpr.;, id/}/if/while/return
" shape="box"];
node_54[label="expr->add_expr.comp_add_expr, ;
comp_add_expr->., ;
comp_add_expr->.comp_operatoradd_exprcomp_add_expr, ;
comp_operator->.<, id/num/(
comp_operator->.<=, id/num/(
comp_operator->.>, id/num/(
comp_operator->.>=, id/num/(
comp_operator->.==, id/num/(
comp_operator->.!=, id/num/(
" shape="box"];
node_55[label="add_expr->term.pre_term, ==/>/>=/</<=/!=/;
pre_term->., ==/>/>=/</<=/!=/;
pre_term->.+termpre_term, ==/>/>=/</<=/!=/;
pre_term->.-termpre_term, ==/>/>=/</<=/!=/;
" shape="box"];
node_56[label="term->factor.pre_factor, +/-/==/>/>=/</<=/!=/;
pre_factor->., +/-/==/>/>=/</<=/!=/;
pre_factor->.*factorpre_factor, +/-/==/>/>=/</<=/!=/;
pre_factor->./factorpre_factor, +/-/==/>/>=/</<=/!=/;
" shape="box"];
node_57[label="stat_block->{in_decstat_str}., the_end/int/void
" shape="box"];
node_58[label="stat_str->statstat_str., }
" shape="box"];
node_59[label="in_dec->in_var_dec;in_dec., id/if/while/return
" shape="box"];
node_60[label="assign_stat->id=expr.;, id/}/if/while/return
" shape="box"];
node_61[label="factor->id.func_type, +/-/*///==/>/>=/</<=/!=/,/)
func_type->., +/-/*///==/>/>=/</<=/!=/,/)
func_type->.call, +/-/*///==/>/>=/</<=/!=/,/)
call->.(argus), +/-/*///==/>/>=/</<=/!=/,/)
" shape="box"];
node_62[label="factor->num., +/-/*///==/>/>=/</<=/!=/,/)
" shape="box"];
node_63[label="expr->.add_exprcomp_add_expr, )
add_expr->.termpre_term, ==/>/>=/</<=/!=/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/)
factor->.num, +/-/*///==/>/>=/</<=/!=/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/)
factor->(.expr), +/-/*///==/>/>=/</<=/!=/,/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_64[label="argu_list->expr.pre_expr, )
pre_expr->., )
pre_expr->.,exprpre_expr, )
" shape="box"];
node_65[label="expr->add_expr.comp_add_expr, ,/)
comp_add_expr->., ,/)
comp_add_expr->.comp_operatoradd_exprcomp_add_expr, ,/)
comp_operator->.<, id/num/(
comp_operator->.<=, id/num/(
comp_operator->.>, id/num/(
comp_operator->.>=, id/num/(
comp_operator->.==, id/num/(
comp_operator->.!=, id/num/(
" shape="box"];
node_66[label="add_expr->term.pre_term, ==/>/>=/</<=/!=/,/)
pre_term->., ==/>/>=/</<=/!=/,/)
pre_term->.+termpre_term, ==/>/>=/</<=/!=/,/)
pre_term->.-termpre_term, ==/>/>=/</<=/!=/,/)
" shape="box"];
node_67[label="term->factor.pre_factor, +/-/==/>/>=/</<=/!=/,/)
pre_factor->., +/-/==/>/>=/</<=/!=/,/)
pre_factor->.*factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
pre_factor->./factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
" shape="box"];
node_68[label="call->(argus.), ;
" shape="box"];
node_69[label="argus->argu_list., )
" shape="box"];
node_70[label="stat->idfunc_type;., id/}/if/while/return
" shape="box"];
node_71[label="factor->id.func_type, +/-/*///==/>/>=/</<=/!=/)
func_type->., +/-/*///==/>/>=/</<=/!=/)
func_type->.call, +/-/*///==/>/>=/</<=/!=/)
call->.(argus), +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_72[label="factor->num., +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_73[label="expr->.add_exprcomp_add_expr, )
add_expr->.termpre_term, ==/>/>=/</<=/!=/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/)
factor->.num, +/-/*///==/>/>=/</<=/!=/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/)
factor->(.expr), +/-/*///==/>/>=/</<=/!=/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_74[label="if_stat->if(expr.)stat_block, id/}/if/while/return
if_stat->if(expr.)stat_blockelsestat_block, id/}/if/while/return
" shape="box"];
node_75[label="expr->add_expr.comp_add_expr, )
comp_add_expr->., )
comp_add_expr->.comp_operatoradd_exprcomp_add_expr, )
comp_operator->.<, id/num/(
comp_operator->.<=, id/num/(
comp_operator->.>, id/num/(
comp_operator->.>=, id/num/(
comp_operator->.==, id/num/(
comp_operator->.!=, id/num/(
" shape="box"];
node_76[label="add_expr->term.pre_term, ==/>/>=/</<=/!=/)
pre_term->., ==/>/>=/</<=/!=/)
pre_term->.+termpre_term, ==/>/>=/</<=/!=/)
pre_term->.-termpre_term, ==/>/>=/</<=/!=/)
" shape="box"];
node_77[label="term->factor.pre_factor, +/-/==/>/>=/</<=/!=/)
pre_factor->., +/-/==/>/>=/</<=/!=/)
pre_factor->.*factorpre_factor, +/-/==/>/>=/</<=/!=/)
pre_factor->./factorpre_factor, +/-/==/>/>=/</<=/!=/)
" shape="box"];
node_78[label="while_stat->while(expr.)stat_block, id/}/if/while/return
" shape="box"];
node_79[label="expr->.add_exprcomp_add_expr, ,/)
add_expr->.termpre_term, ==/>/>=/</<=/!=/,/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
factor->.num, +/-/*///==/>/>=/</<=/!=/,/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/,/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/,/)
call->(.argus), +/-/*///==/>/>=/</<=/!=/;
argus->., )
argus->.argu_list, )
argu_list->.exprpre_expr, )
" shape="box"];
node_80[label="factor->idfunc_type., +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_81[label="func_type->call., +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_82[label="factor->(expr.), +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_83[label="return_stat->returnexpr;., id/}/if/while/return
" shape="box"];
node_84[label="comp_operator->==., id/num/(
" shape="box"];
node_85[label="comp_operator->>., id/num/(
" shape="box"];
node_86[label="comp_operator->>=., id/num/(
" shape="box"];
node_87[label="comp_operator-><., id/num/(
" shape="box"];
node_88[label="comp_operator-><=., id/num/(
" shape="box"];
node_89[label="comp_operator->!=., id/num/(
" shape="box"];
node_90[label="expr->add_exprcomp_add_expr., ;
" shape="box"];
node_91[label="comp_add_expr->comp_operator.add_exprcomp_add_expr, ;
add_expr->.termpre_term, ==/>/>=/</<=/!=/;
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/;
factor->.num, +/-/*///==/>/>=/</<=/!=/;
factor->.(expr), +/-/*///==/>/>=/</<=/!=/;
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_92[label="pre_term->+.termpre_term, ==/>/>=/</<=/!=/;
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/;
factor->.num, +/-/*///==/>/>=/</<=/!=/;
factor->.(expr), +/-/*///==/>/>=/</<=/!=/;
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_93[label="pre_term->-.termpre_term, ==/>/>=/</<=/!=/;
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/;
factor->.num, +/-/*///==/>/>=/</<=/!=/;
factor->.(expr), +/-/*///==/>/>=/</<=/!=/;
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_94[label="add_expr->termpre_term., ==/>/>=/</<=/!=/;
" shape="box"];
node_95[label="pre_factor->*.factorpre_factor, +/-/==/>/>=/</<=/!=/;
factor->.num, +/-/*///==/>/>=/</<=/!=/;
factor->.(expr), +/-/*///==/>/>=/</<=/!=/;
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_96[label="pre_factor->/.factorpre_factor, +/-/==/>/>=/</<=/!=/;
factor->.num, +/-/*///==/>/>=/</<=/!=/;
factor->.(expr), +/-/*///==/>/>=/</<=/!=/;
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_97[label="term->factorpre_factor., +/-/==/>/>=/</<=/!=/;
" shape="box"];
node_98[label="assign_stat->id=expr;., id/}/if/while/return
" shape="box"];
node_99[label="expr->.add_exprcomp_add_expr, ,/)
add_expr->.termpre_term, ==/>/>=/</<=/!=/,/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
factor->.num, +/-/*///==/>/>=/</<=/!=/,/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/,/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/,/)
call->(.argus), +/-/*///==/>/>=/</<=/!=/,/)
argus->., )
argus->.argu_list, )
argu_list->.exprpre_expr, )
" shape="box"];
node_100[label="factor->idfunc_type., +/-/*///==/>/>=/</<=/!=/,/)
" shape="box"];
node_101[label="func_type->call., +/-/*///==/>/>=/</<=/!=/,/)
" shape="box"];
node_102[label="factor->(expr.), +/-/*///==/>/>=/</<=/!=/,/)
" shape="box"];
node_103[label="expr->.add_exprcomp_add_expr, ,/)
add_expr->.termpre_term, ==/>/>=/</<=/!=/,/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
factor->.num, +/-/*///==/>/>=/</<=/!=/,/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/,/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/,/)
pre_expr->,.exprpre_expr, )
" shape="box"];
node_104[label="argu_list->exprpre_expr., )
" shape="box"];
node_105[label="expr->add_exprcomp_add_expr., ,/)
" shape="box"];
node_106[label="comp_add_expr->comp_operator.add_exprcomp_add_expr, ,/)
add_expr->.termpre_term, ==/>/>=/</<=/!=/,/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
factor->.num, +/-/*///==/>/>=/</<=/!=/,/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/,/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/,/)
" shape="box"];
node_107[label="pre_term->+.termpre_term, ==/>/>=/</<=/!=/,/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
factor->.num, +/-/*///==/>/>=/</<=/!=/,/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/,/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/,/)
" shape="box"];
node_108[label="pre_term->-.termpre_term, ==/>/>=/</<=/!=/,/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
factor->.num, +/-/*///==/>/>=/</<=/!=/,/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/,/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/,/)
" shape="box"];
node_109[label="add_expr->termpre_term., ==/>/>=/</<=/!=/,/)
" shape="box"];
node_110[label="pre_factor->*.factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
factor->.num, +/-/*///==/>/>=/</<=/!=/,/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/,/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/,/)
" shape="box"];
node_111[label="pre_factor->/.factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
factor->.num, +/-/*///==/>/>=/</<=/!=/,/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/,/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/,/)
" shape="box"];
node_112[label="term->factorpre_factor., +/-/==/>/>=/</<=/!=/,/)
" shape="box"];
node_113[label="call->(argus)., ;
" shape="box"];
node_114[label="expr->.add_exprcomp_add_expr, ,/)
add_expr->.termpre_term, ==/>/>=/</<=/!=/,/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
factor->.num, +/-/*///==/>/>=/</<=/!=/,/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/,/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/,/)
call->(.argus), +/-/*///==/>/>=/</<=/!=/)
argus->., )
argus->.argu_list, )
argu_list->.exprpre_expr, )
" shape="box"];
node_115[label="factor->idfunc_type., +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_116[label="func_type->call., +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_117[label="factor->(expr.), +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_118[label="stat_block->.{in_decstat_str}, id/}/if/else/while/return
if_stat->if(expr).stat_block, id/}/if/while/return
if_stat->if(expr).stat_blockelsestat_block, id/}/if/while/return
" shape="box"];
node_119[label="expr->add_exprcomp_add_expr., )
" shape="box"];
node_120[label="comp_add_expr->comp_operator.add_exprcomp_add_expr, )
add_expr->.termpre_term, ==/>/>=/</<=/!=/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/)
factor->.num, +/-/*///==/>/>=/</<=/!=/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_121[label="pre_term->+.termpre_term, ==/>/>=/</<=/!=/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/)
factor->.num, +/-/*///==/>/>=/</<=/!=/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_122[label="pre_term->-.termpre_term, ==/>/>=/</<=/!=/)
term->.factorpre_factor, +/-/==/>/>=/</<=/!=/)
factor->.num, +/-/*///==/>/>=/</<=/!=/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_123[label="add_expr->termpre_term., ==/>/>=/</<=/!=/)
" shape="box"];
node_124[label="pre_factor->*.factorpre_factor, +/-/==/>/>=/</<=/!=/)
factor->.num, +/-/*///==/>/>=/</<=/!=/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_125[label="pre_factor->/.factorpre_factor, +/-/==/>/>=/</<=/!=/)
factor->.num, +/-/*///==/>/>=/</<=/!=/)
factor->.(expr), +/-/*///==/>/>=/</<=/!=/)
factor->.idfunc_type, +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_126[label="term->factorpre_factor., +/-/==/>/>=/</<=/!=/)
" shape="box"];
node_127[label="stat_block->.{in_decstat_str}, id/}/if/while/return
while_stat->while(expr).stat_block, id/}/if/while/return
" shape="box"];
node_128[label="call->(argus.), +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_129[label="factor->(expr)., +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_130[label="comp_add_expr->., ;
comp_add_expr->.comp_operatoradd_exprcomp_add_expr, ;
comp_add_expr->comp_operatoradd_expr.comp_add_expr, ;
comp_operator->.<, id/num/(
comp_operator->.<=, id/num/(
comp_operator->.>, id/num/(
comp_operator->.>=, id/num/(
comp_operator->.==, id/num/(
comp_operator->.!=, id/num/(
" shape="box"];
node_131[label="pre_term->., ==/>/>=/</<=/!=/;
pre_term->.+termpre_term, ==/>/>=/</<=/!=/;
pre_term->+term.pre_term, ==/>/>=/</<=/!=/;
pre_term->.-termpre_term, ==/>/>=/</<=/!=/;
" shape="box"];
node_132[label="pre_term->., ==/>/>=/</<=/!=/;
pre_term->.+termpre_term, ==/>/>=/</<=/!=/;
pre_term->.-termpre_term, ==/>/>=/</<=/!=/;
pre_term->-term.pre_term, ==/>/>=/</<=/!=/;
" shape="box"];
node_133[label="pre_factor->., +/-/==/>/>=/</<=/!=/;
pre_factor->.*factorpre_factor, +/-/==/>/>=/</<=/!=/;
pre_factor->*factor.pre_factor, +/-/==/>/>=/</<=/!=/;
pre_factor->./factorpre_factor, +/-/==/>/>=/</<=/!=/;
" shape="box"];
node_134[label="pre_factor->., +/-/==/>/>=/</<=/!=/;
pre_factor->.*factorpre_factor, +/-/==/>/>=/</<=/!=/;
pre_factor->./factorpre_factor, +/-/==/>/>=/</<=/!=/;
pre_factor->/factor.pre_factor, +/-/==/>/>=/</<=/!=/;
" shape="box"];
node_135[label="call->(argus.), +/-/*///==/>/>=/</<=/!=/,/)
" shape="box"];
node_136[label="factor->(expr)., +/-/*///==/>/>=/</<=/!=/,/)
" shape="box"];
node_137[label="pre_expr->., )
pre_expr->.,exprpre_expr, )
pre_expr->,expr.pre_expr, )
" shape="box"];
node_138[label="comp_add_expr->., ,/)
comp_add_expr->.comp_operatoradd_exprcomp_add_expr, ,/)
comp_add_expr->comp_operatoradd_expr.comp_add_expr, ,/)
comp_operator->.<, id/num/(
comp_operator->.<=, id/num/(
comp_operator->.>, id/num/(
comp_operator->.>=, id/num/(
comp_operator->.==, id/num/(
comp_operator->.!=, id/num/(
" shape="box"];
node_139[label="pre_term->., ==/>/>=/</<=/!=/,/)
pre_term->.+termpre_term, ==/>/>=/</<=/!=/,/)
pre_term->+term.pre_term, ==/>/>=/</<=/!=/,/)
pre_term->.-termpre_term, ==/>/>=/</<=/!=/,/)
" shape="box"];
node_140[label="pre_term->., ==/>/>=/</<=/!=/,/)
pre_term->.+termpre_term, ==/>/>=/</<=/!=/,/)
pre_term->.-termpre_term, ==/>/>=/</<=/!=/,/)
pre_term->-term.pre_term, ==/>/>=/</<=/!=/,/)
" shape="box"];
node_141[label="pre_factor->., +/-/==/>/>=/</<=/!=/,/)
pre_factor->.*factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
pre_factor->*factor.pre_factor, +/-/==/>/>=/</<=/!=/,/)
pre_factor->./factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
" shape="box"];
node_142[label="pre_factor->., +/-/==/>/>=/</<=/!=/,/)
pre_factor->.*factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
pre_factor->./factorpre_factor, +/-/==/>/>=/</<=/!=/,/)
pre_factor->/factor.pre_factor, +/-/==/>/>=/</<=/!=/,/)
" shape="box"];
node_143[label="call->(argus.), +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_144[label="factor->(expr)., +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_145[label="stat_block->{.in_decstat_str}, id/}/if/else/while/return
in_dec->., id/if/while/return
in_dec->.in_var_dec;in_dec, id/if/while/return
in_var_dec->.intid, ;
" shape="box"];
node_146[label="if_stat->if(expr)stat_block., id/}/if/while/return
if_stat->if(expr)stat_block.elsestat_block, id/}/if/while/return
" shape="box"];
node_147[label="comp_add_expr->., )
comp_add_expr->.comp_operatoradd_exprcomp_add_expr, )
comp_add_expr->comp_operatoradd_expr.comp_add_expr, )
comp_operator->.<, id/num/(
comp_operator->.<=, id/num/(
comp_operator->.>, id/num/(
comp_operator->.>=, id/num/(
comp_operator->.==, id/num/(
comp_operator->.!=, id/num/(
" shape="box"];
node_148[label="pre_term->., ==/>/>=/</<=/!=/)
pre_term->.+termpre_term, ==/>/>=/</<=/!=/)
pre_term->+term.pre_term, ==/>/>=/</<=/!=/)
pre_term->.-termpre_term, ==/>/>=/</<=/!=/)
" shape="box"];
node_149[label="pre_term->., ==/>/>=/</<=/!=/)
pre_term->.+termpre_term, ==/>/>=/</<=/!=/)
pre_term->.-termpre_term, ==/>/>=/</<=/!=/)
pre_term->-term.pre_term, ==/>/>=/</<=/!=/)
" shape="box"];
node_150[label="pre_factor->., +/-/==/>/>=/</<=/!=/)
pre_factor->.*factorpre_factor, +/-/==/>/>=/</<=/!=/)
pre_factor->*factor.pre_factor, +/-/==/>/>=/</<=/!=/)
pre_factor->./factorpre_factor, +/-/==/>/>=/</<=/!=/)
" shape="box"];
node_151[label="pre_factor->., +/-/==/>/>=/</<=/!=/)
pre_factor->.*factorpre_factor, +/-/==/>/>=/</<=/!=/)
pre_factor->./factorpre_factor, +/-/==/>/>=/</<=/!=/)
pre_factor->/factor.pre_factor, +/-/==/>/>=/</<=/!=/)
" shape="box"];
node_152[label="stat_block->{.in_decstat_str}, id/}/if/while/return
in_dec->., id/if/while/return
in_dec->.in_var_dec;in_dec, id/if/while/return
in_var_dec->.intid, ;
" shape="box"];
node_153[label="while_stat->while(expr)stat_block., id/}/if/while/return
" shape="box"];
node_154[label="call->(argus)., +/-/*///==/>/>=/</<=/!=/;
" shape="box"];
node_155[label="comp_add_expr->comp_operatoradd_exprcomp_add_expr., ;
" shape="box"];
node_156[label="pre_term->+termpre_term., ==/>/>=/</<=/!=/;
" shape="box"];
node_157[label="pre_term->-termpre_term., ==/>/>=/</<=/!=/;
" shape="box"];
node_158[label="pre_factor->*factorpre_factor., +/-/==/>/>=/</<=/!=/;
" shape="box"];
node_159[label="pre_factor->/factorpre_factor., +/-/==/>/>=/</<=/!=/;
" shape="box"];
node_160[label="call->(argus)., +/-/*///==/>/>=/</<=/!=/,/)
" shape="box"];
node_161[label="pre_expr->,exprpre_expr., )
" shape="box"];
node_162[label="comp_add_expr->comp_operatoradd_exprcomp_add_expr., ,/)
" shape="box"];
node_163[label="pre_term->+termpre_term., ==/>/>=/</<=/!=/,/)
" shape="box"];
node_164[label="pre_term->-termpre_term., ==/>/>=/</<=/!=/,/)
" shape="box"];
node_165[label="pre_factor->*factorpre_factor., +/-/==/>/>=/</<=/!=/,/)
" shape="box"];
node_166[label="pre_factor->/factorpre_factor., +/-/==/>/>=/</<=/!=/,/)
" shape="box"];
node_167[label="call->(argus)., +/-/*///==/>/>=/</<=/!=/)
" shape="box"];
node_168[label="stat_block->{in_dec.stat_str}, id/}/if/else/while/return
stat_str->.stat, }
stat_str->.statstat_str, }
stat->.if_stat, id/}/if/while/return
stat->.while_stat, id/}/if/while/return
stat->.return_stat, id/}/if/while/return
stat->.assign_stat, id/}/if/while/return
stat->.idfunc_type;, id/}/if/while/return
assign_stat->.id=expr;, id/}/if/while/return
return_stat->.return;, id/}/if/while/return
return_stat->.returnexpr;, id/}/if/while/return
while_stat->.while(expr)stat_block, id/}/if/while/return
if_stat->.if(expr)stat_block, id/}/if/while/return
if_stat->.if(expr)stat_blockelsestat_block, id/}/if/while/return
" shape="box"];
node_169[label="stat_block->.{in_decstat_str}, id/}/if/while/return
if_stat->if(expr)stat_blockelse.stat_block, id/}/if/while/return
" shape="box"];
node_170[label="comp_add_expr->comp_operatoradd_exprcomp_add_expr., )
" shape="box"];
node_171[label="pre_term->+termpre_term., ==/>/>=/</<=/!=/)
" shape="box"];
node_172[label="pre_term->-termpre_term., ==/>/>=/</<=/!=/)
" shape="box"];
node_173[label="pre_factor->*factorpre_factor., +/-/==/>/>=/</<=/!=/)
" shape="box"];
node_174[label="pre_factor->/factorpre_factor., +/-/==/>/>=/</<=/!=/)
" shape="box"];
node_175[label="stat_block->{in_dec.stat_str}, id/}/if/while/return
stat_str->.stat, }
stat_str->.statstat_str, }
stat->.if_stat, id/}/if/while/return
stat->.while_stat, id/}/if/while/return
stat->.return_stat, id/}/if/while/return
stat->.assign_stat, id/}/if/while/return
stat->.idfunc_type;, id/}/if/while/return
assign_stat->.id=expr;, id/}/if/while/return
return_stat->.return;, id/}/if/while/return
return_stat->.returnexpr;, id/}/if/while/return
while_stat->.while(expr)stat_block, id/}/if/while/return
if_stat->.if(expr)stat_block, id/}/if/while/return
if_stat->.if(expr)stat_blockelsestat_block, id/}/if/while/return
" shape="box"];
node_176[label="stat_block->{in_decstat_str.}, id/}/if/else/while/return
" shape="box"];
node_177[label="if_stat->if(expr)stat_blockelsestat_block., id/}/if/while/return
" shape="box"];
node_178[label="stat_block->{in_decstat_str.}, id/}/if/while/return
" shape="box"];
node_179[label="stat_block->{in_decstat_str}., id/}/if/else/while/return
" shape="box"];
node_180[label="stat_block->{in_decstat_str}., id/}/if/while/return
" shape="box"];
node_0->node_1[label="int"];
node_0->node_2[label="void"];
node_0->node_3[label="program"];
node_0->node_4[label="dec_list"];
node_0->node_5[label="dec"];
node_1->node_6[label="id"];
node_2->node_7[label="id"];
node_5->node_1[label="int"];
node_5->node_2[label="void"];
node_5->node_8[label="dec_list"];
node_5->node_5[label="dec"];
node_6->node_9[label=";"];
node_6->node_10[label="("];
node_6->node_11[label="dec_type"];
node_6->node_12[label="func_dec"];
node_6->node_13[label="var_dec"];
node_7->node_10[label="("];
node_7->node_14[label="func_dec"];
node_10->node_15[label="int"];
node_10->node_16[label="void"];
node_10->node_17[label="params"];
node_10->node_18[label="param_list"];
node_10->node_19[label="param"];
node_15->node_20[label="id"];
node_17->node_21[label=")"];
node_19->node_22[label=","];
node_19->node_23[label="pre_param"];
node_21->node_24[label="{"];
node_21->node_25[label="stat_block"];
node_22->node_15[label="int"];
node_22->node_26[label="param"];
node_24->node_27[label="int"];
node_24->node_28[label="in_dec"];
node_24->node_29[label="in_var_dec"];
node_26->node_22[label=","];
node_26->node_30[label="pre_param"];
node_27->node_31[label="id"];
node_28->node_32[label="id"];
node_28->node_33[label="if"];
node_28->node_34[label="while"];
node_28->node_35[label="return"];
node_28->node_36[label="stat_str"];
node_28->node_37[label="stat"];
node_28->node_38[label="if_stat"];
node_28->node_39[label="while_stat"];
node_28->node_40[label="return_stat"];
node_28->node_41[label="assign_stat"];
node_29->node_42[label=";"];
node_32->node_43[label="="];
node_32->node_44[label="("];
node_32->node_45[label="func_type"];
node_32->node_46[label="call"];
node_33->node_47[label="("];
node_34->node_48[label="("];
node_35->node_49[label="id"];
node_35->node_50[label="num"];
node_35->node_51[label=";"];
node_35->node_52[label="("];
node_35->node_53[label="expr"];
node_35->node_54[label="add_expr"];
node_35->node_55[label="term"];
node_35->node_56[label="factor"];
node_36->node_57[label="}"];
node_37->node_32[label="id"];
node_37->node_33[label="if"];
node_37->node_34[label="while"];
node_37->node_35[label="return"];
node_37->node_58[label="stat_str"];
node_37->node_37[label="stat"];
node_37->node_38[label="if_stat"];
node_37->node_39[label="while_stat"];
node_37->node_40[label="return_stat"];
node_37->node_41[label="assign_stat"];
node_42->node_27[label="int"];
node_42->node_59[label="in_dec"];
node_42->node_29[label="in_var_dec"];
node_43->node_49[label="id"];
node_43->node_50[label="num"];
node_43->node_52[label="("];
node_43->node_60[label="expr"];
node_43->node_54[label="add_expr"];
node_43->node_55[label="term"];
node_43->node_56[label="factor"];
node_44->node_61[label="id"];
node_44->node_62[label="num"];
node_44->node_63[label="("];
node_44->node_64[label="expr"];
node_44->node_65[label="add_expr"];
node_44->node_66[label="term"];
node_44->node_67[label="factor"];
node_44->node_68[label="argus"];
node_44->node_69[label="argu_list"];
node_45->node_70[label=";"];
node_47->node_71[label="id"];
node_47->node_72[label="num"];
node_47->node_73[label="("];
node_47->node_74[label="expr"];
node_47->node_75[label="add_expr"];
node_47->node_76[label="term"];
node_47->node_77[label="factor"];
node_48->node_71[label="id"];
node_48->node_72[label="num"];
node_48->node_73[label="("];
node_48->node_78[label="expr"];
node_48->node_75[label="add_expr"];
node_48->node_76[label="term"];
node_48->node_77[label="factor"];
node_49->node_79[label="("];
node_49->node_80[label="func_type"];
node_49->node_81[label="call"];
node_52->node_71[label="id"];
node_52->node_72[label="num"];
node_52->node_73[label="("];
node_52->node_82[label="expr"];
node_52->node_75[label="add_expr"];
node_52->node_76[label="term"];
node_52->node_77[label="factor"];
node_53->node_83[label=";"];
node_54->node_84[label="=="];
node_54->node_85[label=">"];
node_54->node_86[label=">="];
node_54->node_87[label="<"];
node_54->node_88[label="<="];
node_54->node_89[label="!="];
node_54->node_90[label="comp_add_expr"];
node_54->node_91[label="comp_operator"];
node_55->node_92[label="+"];
node_55->node_93[label="-"];
node_55->node_94[label="pre_term"];
node_56->node_95[label="*"];
node_56->node_96[label="/"];
node_56->node_97[label="pre_factor"];
node_60->node_98[label=";"];
node_61->node_99[label="("];
node_61->node_100[label="func_type"];
node_61->node_101[label="call"];
node_63->node_71[label="id"];
node_63->node_72[label="num"];
node_63->node_73[label="("];
node_63->node_102[label="expr"];
node_63->node_75[label="add_expr"];
node_63->node_76[label="term"];
node_63->node_77[label="factor"];
node_64->node_103[label=","];
node_64->node_104[label="pre_expr"];
node_65->node_84[label="=="];
node_65->node_85[label=">"];
node_65->node_86[label=">="];
node_65->node_87[label="<"];
node_65->node_88[label="<="];
node_65->node_89[label="!="];
node_65->node_105[label="comp_add_expr"];
node_65->node_106[label="comp_operator"];
node_66->node_107[label="+"];
node_66->node_108[label="-"];
node_66->node_109[label="pre_term"];
node_67->node_110[label="*"];
node_67->node_111[label="/"];
node_67->node_112[label="pre_factor"];
node_68->node_113[label=")"];
node_71->node_114[label="("];
node_71->node_115[label="func_type"];
node_71->node_116[label="call"];
node_73->node_71[label="id"];
node_73->node_72[label="num"];
node_73->node_73[label="("];
node_73->node_117[label="expr"];
node_73->node_75[label="add_expr"];
node_73->node_76[label="term"];
node_73->node_77[label="factor"];
node_74->node_118[label=")"];
node_75->node_84[label="=="];
node_75->node_85[label=">"];
node_75->node_86[label=">="];
node_75->node_87[label="<"];
node_75->node_88[label="<="];
node_75->node_89[label="!="];
node_75->node_119[label="comp_add_expr"];
node_75->node_120[label="comp_operator"];
node_76->node_121[label="+"];
node_76->node_122[label="-"];
node_76->node_123[label="pre_term"];
node_77->node_124[label="*"];
node_77->node_125[label="/"];
node_77->node_126[label="pre_factor"];
node_78->node_127[label=")"];
node_79->node_61[label="id"];
node_79->node_62[label="num"];
node_79->node_63[label="("];
node_79->node_64[label="expr"];
node_79->node_65[label="add_expr"];
node_79->node_66[label="term"];
node_79->node_67[label="factor"];
node_79->node_128[label="argus"];
node_79->node_69[label="argu_list"];
node_82->node_129[label=")"];
node_91->node_49[label="id"];
node_91->node_50[label="num"];
node_91->node_52[label="("];
node_91->node_130[label="add_expr"];
node_91->node_55[label="term"];
node_91->node_56[label="factor"];
node_92->node_49[label="id"];
node_92->node_50[label="num"];
node_92->node_52[label="("];
node_92->node_131[label="term"];
node_92->node_56[label="factor"];
node_93->node_49[label="id"];
node_93->node_50[label="num"];
node_93->node_52[label="("];
node_93->node_132[label="term"];
node_93->node_56[label="factor"];
node_95->node_49[label="id"];
node_95->node_50[label="num"];
node_95->node_52[label="("];
node_95->node_133[label="factor"];
node_96->node_49[label="id"];
node_96->node_50[label="num"];
node_96->node_52[label="("];
node_96->node_134[label="factor"];
node_99->node_61[label="id"];
node_99->node_62[label="num"];
node_99->node_63[label="("];
node_99->node_64[label="expr"];
node_99->node_65[label="add_expr"];
node_99->node_66[label="term"];
node_99->node_67[label="factor"];
node_99->node_135[label="argus"];
node_99->node_69[label="argu_list"];
node_102->node_136[label=")"];
node_103->node_61[label="id"];
node_103->node_62[label="num"];
node_103->node_63[label="("];
node_103->node_137[label="expr"];
node_103->node_65[label="add_expr"];
node_103->node_66[label="term"];
node_103->node_67[label="factor"];
node_106->node_61[label="id"];
node_106->node_62[label="num"];
node_106->node_63[label="("];
node_106->node_138[label="add_expr"];
node_106->node_66[label="term"];
node_106->node_67[label="factor"];
node_107->node_61[label="id"];
node_107->node_62[label="num"];
node_107->node_63[label="("];
node_107->node_139[label="term"];
node_107->node_67[label="factor"];
node_108->node_61[label="id"];
node_108->node_62[label="num"];
node_108->node_63[label="("];
node_108->node_140[label="term"];
node_108->node_67[label="factor"];
node_110->node_61[label="id"];
node_110->node_62[label="num"];
node_110->node_63[label="("];
node_110->node_141[label="factor"];
node_111->node_61[label="id"];
node_111->node_62[label="num"];
node_111->node_63[label="("];
node_111->node_142[label="factor"];
node_114->node_61[label="id"];
node_114->node_62[label="num"];
node_114->node_63[label="("];
node_114->node_64[label="expr"];
node_114->node_65[label="add_expr"];
node_114->node_66[label="term"];
node_114->node_67[label="factor"];
node_114->node_143[label="argus"];
node_114->node_69[label="argu_list"];
node_117->node_144[label=")"];
node_118->node_145[label="{"];
node_118->node_146[label="stat_block"];
node_120->node_71[label="id"];
node_120->node_72[label="num"];
node_120->node_73[label="("];
node_120->node_147[label="add_expr"];
node_120->node_76[label="term"];
node_120->node_77[label="factor"];
node_121->node_71[label="id"];
node_121->node_72[label="num"];
node_121->node_73[label="("];
node_121->node_148[label="term"];
node_121->node_77[label="factor"];
node_122->node_71[label="id"];
node_122->node_72[label="num"];
node_122->node_73[label="("];
node_122->node_149[label="term"];
node_122->node_77[label="factor"];
node_124->node_71[label="id"];
node_124->node_72[label="num"];
node_124->node_73[label="("];
node_124->node_150[label="factor"];
node_125->node_71[label="id"];
node_125->node_72[label="num"];
node_125->node_73[label="("];
node_125->node_151[label="factor"];
node_127->node_152[label="{"];
node_127->node_153[label="stat_block"];
node_128->node_154[label=")"];
node_130->node_84[label="=="];
node_130->node_85[label=">"];
node_130->node_86[label=">="];
node_130->node_87[label="<"];
node_130->node_88[label="<="];
node_130->node_89[label="!="];
node_130->node_155[label="comp_add_expr"];
node_130->node_91[label="comp_operator"];
node_131->node_92[label="+"];
node_131->node_93[label="-"];
node_131->node_156[label="pre_term"];
node_132->node_92[label="+"];
node_132->node_93[label="-"];
node_132->node_157[label="pre_term"];
node_133->node_95[label="*"];
node_133->node_96[label="/"];
node_133->node_158[label="pre_factor"];
node_134->node_95[label="*"];
node_134->node_96[label="/"];
node_134->node_159[label="pre_factor"];
node_135->node_160[label=")"];
node_137->node_103[label=","];
node_137->node_161[label="pre_expr"];
node_138->node_84[label="=="];
node_138->node_85[label=">"];
node_138->node_86[label=">="];
node_138->node_87[label="<"];
node_138->node_88[label="<="];
node_138->node_89[label="!="];
node_138->node_162[label="comp_add_expr"];
node_138->node_106[label="comp_operator"];
node_139->node_107[label="+"];
node_139->node_108[label="-"];
node_139->node_163[label="pre_term"];
node_140->node_107[label="+"];
node_140->node_108[label="-"];
node_140->node_164[label="pre_term"];
node_141->node_110[label="*"];
node_141->node_111[label="/"];
node_141->node_165[label="pre_factor"];
node_142->node_110[label="*"];
node_142->node_111[label="/"];
node_142->node_166[label="pre_factor"];
node_143->node_167[label=")"];
node_145->node_27[label="int"];
node_145->node_168[label="in_dec"];
node_145->node_29[label="in_var_dec"];
node_146->node_169[label="else"];
node_147->node_84[label="=="];
node_147->node_85[label=">"];
node_147->node_86[label=">="];
node_147->node_87[label="<"];
node_147->node_88[label="<="];
node_147->node_89[label="!="];
node_147->node_170[label="comp_add_expr"];
node_147->node_120[label="comp_operator"];
node_148->node_121[label="+"];
node_148->node_122[label="-"];
node_148->node_171[label="pre_term"];
node_149->node_121[label="+"];
node_149->node_122[label="-"];
node_149->node_172[label="pre_term"];
node_150->node_124[label="*"];
node_150->node_125[label="/"];
node_150->node_173[label="pre_factor"];
node_151->node_124[label="*"];
node_151->node_125[label="/"];
node_151->node_174[label="pre_factor"];
node_152->node_27[label="int"];
node_152->node_175[label="in_dec"];
node_152->node_29[label="in_var_dec"];
node_168->node_32[label="id"];
node_168->node_33[label="if"];
node_168->node_34[label="while"];
node_168->node_35[label="return"];
node_168->node_176[label="stat_str"];
node_168->node_37[label="stat"];
node_168->node_38[label="if_stat"];
node_168->node_39[label="while_stat"];
node_168->node_40[label="return_stat"];
node_168->node_41[label="assign_stat"];
node_169->node_152[label="{"];
node_169->node_177[label="stat_block"];
node_175->node_32[label="id"];
node_175->node_33[label="if"];
node_175->node_34[label="while"];
node_175->node_35[label="return"];
node_175->node_178[label="stat_str"];
node_175->node_37[label="stat"];
node_175->node_38[label="if_stat"];
node_175->node_39[label="while_stat"];
node_175->node_40[label="return_stat"];
node_175->node_41[label="assign_stat"];
node_176->node_179[label="}"];
node_178->node_180[label="}"];
}
